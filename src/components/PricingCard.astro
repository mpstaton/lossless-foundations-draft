---
import "../styles/global.css";
import { Icon } from "astro-icon/components";
import { type HTMLAttributes } from "astro/types";

//why is this throwing errors?
const {
  tier,
  most_popular,
  amount_per_month,
  title,
  description,
  btn_text,
  features,
} = Astro.props;

// interface Props extends HTMLAttributes<"svg"> {
//   /** The name of the icon to include */
//   name: string;
//   /** Shorthand for including a <title>{props.title}</title> element in the SVG */
//   title?: string;
//   /** Shorthand for setting width and height */
//   size?: number | string;
//   width?: number | string;
//   height?: number | string;
// }
---

<article class="option-card">
  <p class="tier">{tier}</p>

  <!-- badge -->
  {most_popular && <p class="badge">Most Popular</p>}

  <!-- amount -->
  <div class="amt">
    <span>$</span>
    <p>{amount_per_month}</p>
    {amount_per_month > 0 && <span>/mo</span>}
  </div>

  <!-- title -->
  <h3>{title}</h3>

  <!-- description -->
  <p class="desc">{description}</p>

  <!-- button -->
  <!-- <Button></Button> -->

  <!-- features -->
  <ul class="features">
    {
      features.map((feature) => (

      <li class="feature">
            {feature.checked ? (
            <Icon name="ri:check" width="20" class="lossless" />
          ) : (
            <Icon name="ri:hearts-fill" width="20" class="lossless" />
          )}
          <span class="feature-title">{feature}</span>
          </span>
        </li>

      ))
    }
  </ul>
</article>

<style>
  article.option-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    width: auto;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    padding: 0 0 1em 0;
    margin: 0 1em;
    > h3 {
      font-size: var(--fs-650);
      text-align: center;
      margin: .5em;
      border: 1px solid var(--clr-lossless-primary-light);
      width: 100%;
    }
    p.tier {
      width: 100%;
      font-size: var(--fs-600);
    }
  }
  p.tier,
  p.desc {
    padding: 0.1em;
    color: teal;
    font-family: var(--ff-base);
    font-size: var(--fs-500);
    max-width: 100%;
    text-align: center;
    line-height: 1.2;
    width: 100%;
  }
  p.desc {
    width: 60%;
  }
  .amt {
    display: inline-flex;
    align-items: center;
    gap: .25em;
    color: var(--clr-body);
    font-family: var(--ff-legible);
    padding: 0;
    > p {
      color: currentColor;
      font-size: var(--fs-600);
    }
    > span {
      font-size: var(--fs-500);
    }
  }

  ul.features {
    margin-bottom: 0;
    margin-top: auto;
    align-content: center;
    padding: .25em;

  }
  li.feature {
    display: flex;
    gap: .5em;
    font-size: var(--fs-400);
    line-height: 1.4;
    width: auto;
  }
  .lossless {
    width: auto;
    color: #fff;
    margin-top: 0.2em;
    margin-bottom: .2em;
  }
  span.feature-title {
    color: #fff;
    font-family: var(--ff-legible);
  }
</style>
